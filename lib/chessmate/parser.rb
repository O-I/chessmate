#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Chessmate
  module PGN
    class Parser < Racc::Parser


  require_relative 'handler'

  attr_reader :handler

  def initialize(tokenizer, handler = Handler.new)
    @tokenizer = tokenizer
    @handler   = handler
    super()
  end

  def next_token
    @tokenizer.next_token
  end

  def parse
    do_parse
    handler
  end
##### State transition tables begin ###

racc_action_table = [
     6,    12,     5,     5,    18,    12,    15,     5,    14,    21,
    23,    21,    25 ]

racc_action_check = [
     1,     3,     0,     3,    10,    10,     6,     1,     5,    12,
    13,    19,    22 ]

racc_action_pointer = [
    -5,     0,   nil,    -4,   nil,     5,     6,   nil,   nil,   nil,
     0,   nil,     6,     8,   nil,   nil,   nil,   nil,   nil,     8,
   nil,   nil,     4,   nil,   nil,   nil ]

racc_action_default = [
   -17,   -17,    -2,   -17,    -5,   -17,   -17,    -1,    -3,    -4,
   -17,   -11,   -17,   -17,    -7,    26,    -9,   -10,   -16,   -12,
   -14,   -15,   -17,    -8,   -13,    -6 ]

racc_goto_table = [
    20,    11,     2,     7,    22,    13,     9,    24,    17,    10,
    16,     8,    19,     1 ]

racc_goto_check = [
    12,    10,     2,     2,     7,     6,     5,    12,    10,     8,
     9,     4,    11,     1 ]

racc_goto_pointer = [
   nil,    13,     2,   nil,     8,     3,     0,    -9,     6,     0,
    -2,     0,   -12 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 10, :_reduce_none,
  1, 10, :_reduce_none,
  2, 11, :_reduce_none,
  2, 12, :_reduce_none,
  1, 12, :_reduce_none,
  4, 14, :_reduce_none,
  1, 15, :_reduce_7,
  1, 16, :_reduce_8,
  2, 13, :_reduce_none,
  2, 17, :_reduce_none,
  1, 17, :_reduce_none,
  2, 19, :_reduce_none,
  2, 20, :_reduce_none,
  1, 20, :_reduce_none,
  1, 21, :_reduce_15,
  1, 18, :_reduce_16 ]

racc_reduce_n = 17

racc_shift_n = 26

racc_token_table = {
  false => 0,
  :error => 1,
  :STRING => 2,
  :SYMBOL => 3,
  :RESULT => 4,
  :MOVE => 5,
  :NAG => 6,
  "[" => 7,
  "]" => 8 }

racc_nt_base = 9

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "STRING",
  "SYMBOL",
  "RESULT",
  "MOVE",
  "NAG",
  "\"[\"",
  "\"]\"",
  "$start",
  "pgn_database",
  "pgn_game",
  "tag_pairs",
  "movetext",
  "tag_pair",
  "tag_name",
  "tag_value",
  "moves",
  "game_termination",
  "move",
  "turns",
  "turn" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

def _reduce_7(val, _values, result)
 puts val[0].capitalize 
    result
end

def _reduce_8(val, _values, result)
 puts val[0][1..-2] 
    result
end

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

def _reduce_15(val, _values, result)
 puts val[0] 
    result
end

def _reduce_16(val, _values, result)
 puts val[0] 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class Parser
    end   # module PGN
  end   # module Chessmate
